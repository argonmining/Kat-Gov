openapi: 3.0.0
info:
  title: Kat Gov API
  description: API documentation for the Kat Gov governance application.
  version: 1.0.0
servers:
  - url: http://localhost:7878/api
    description: Local development server

paths:
  /proposals:
    post:
      summary: Create a new proposal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proposal'
      responses:
        '201':
          description: Proposal created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
        '400':
          description: Invalid input
    get:
      summary: Retrieve a list of proposals
      parameters:
        - name: title
          in: query
          description: Filter proposals by title
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter proposals by status
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          description: Sort proposals by a specific field
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the number of proposals returned
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: Offset for pagination
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A list of proposals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal'

  /proposals/{proposalId}:
    put:
      summary: Update a proposal
      parameters:
        - name: proposalId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proposal'
      responses:
        '200':
          description: Proposal updated successfully
        '400':
          description: Invalid proposal ID
        '404':
          description: Proposal not found
    delete:
      summary: Delete a proposal
      parameters:
        - name: proposalId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Proposal deleted successfully
        '400':
          description: Invalid proposal ID
        '404':
          description: Proposal not found

  /elections:
    post:
      summary: Create a new election
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Election'
      responses:
        '201':
          description: Election created successfully
    get:
      summary: Retrieve a list of elections
      responses:
        '200':
          description: A list of elections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Election'

  /elections/{electionId}:
    get:
      summary: Retrieve details for a specific election
      parameters:
        - name: electionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Election details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Election'
        '404':
          description: Election not found

  /positions:
    get:
      summary: Retrieve a list of positions
      responses:
        '200':
          description: A list of positions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Position'
    post:
      summary: Create a new position
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Position'
      responses:
        '201':
          description: Position created successfully

  /positions/{positionId}:
    put:
      summary: Update a position
      parameters:
        - name: positionId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Position'
      responses:
        '200':
          description: Position updated successfully
        '404':
          description: Position not found
    delete:
      summary: Delete a position
      parameters:
        - name: positionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Position deleted successfully
        '404':
          description: Position not found

  /proposal-types:
    get:
      summary: Retrieve a list of proposal types
      responses:
        '200':
          description: A list of proposal types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProposalType'
    post:
      summary: Create a new proposal type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposalType'
      responses:
        '201':
          description: Proposal type created successfully

  /proposal-types/{proposalTypeId}:
    put:
      summary: Update a proposal type
      parameters:
        - name: proposalTypeId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposalType'
      responses:
        '200':
          description: Proposal type updated successfully
        '404':
          description: Proposal type not found
    delete:
      summary: Delete a proposal type
      parameters:
        - name: proposalTypeId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Proposal type deleted successfully
        '404':
          description: Proposal type not found

  /statuses:
    get:
      summary: Retrieve a list of statuses
      responses:
        '200':
          description: A list of statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'
    post:
      summary: Create a new status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
      responses:
        '201':
          description: Status created successfully

  /statuses/{statusId}:
    put:
      summary: Update a status
      parameters:
        - name: statusId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
      responses:
        '200':
          description: Status updated successfully
        '404':
          description: Status not found
    delete:
      summary: Delete a status
      parameters:
        - name: statusId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Status deleted successfully
        '404':
          description: Status not found

components:
  schemas:
    Proposal:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        subtitle:
          type: string
        body:
          type: string
        type:
          type: integer
        approved:
          type: boolean
        reviewed:
          type: boolean
        status:
          type: integer
        submitdate:
          type: string
          format: date-time
        openvote:
          type: string
          format: date-time
        snapshot:
          type: string
          format: date-time
        closevote:
          type: string
          format: date-time

    Election:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time

    Position:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        filled:
          type: boolean
        elect:
          type: boolean

    ProposalType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        simple:
          type: boolean

    Status:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        active:
          type: boolean
