openapi: 3.0.0
info:
  title: Kat Gov API
  description: API documentation for the Kat Gov governance application.
  version: 1.0.0
servers:
  - url: https://govapi.nachowyborski.xyz/api
    description: Local development server

paths:
  /proposals:
    post:
      summary: Create a new proposal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proposal'
      responses:
        '201':
          description: Proposal created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
        '400':
          description: Invalid input
    get:
      summary: Retrieve a list of proposals
      parameters:
        - name: title
          in: query
          description: Filter proposals by title
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter proposals by status
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          description: Sort proposals by a specific field
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the number of proposals returned
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: Offset for pagination
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A list of proposals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal'

  /proposals/{proposalId}:
    get:
      summary: Retrieve details for a specific proposal
      parameters:
        - name: proposalId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Proposal details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
        '404':
          description: Proposal not found
    put:
      summary: Update a proposal
      parameters:
        - name: proposalId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proposal'
      responses:
        '200':
          description: Proposal updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
        '400':
          description: Invalid input
        '404':
          description: Proposal not found

  /proposal-nominations:
    get:
      summary: Retrieve all proposal nominations
      responses:
        '200':
          description: A list of proposal nominations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProposalNomination'
    post:
      summary: Submit a new proposal nomination
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposalNomination'
      responses:
        '201':
          description: Proposal nomination created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalNomination'
        '400':
          description: Invalid input

  /proposal-nominations/{id}:
    put:
      summary: Modify a proposal nomination
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposalNomination'
      responses:
        '200':
          description: Proposal nomination updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalNomination'
        '400':
          description: Invalid input
        '404':
          description: Proposal nomination not found
    delete:
      summary: Remove a proposal nomination
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Proposal nomination deleted successfully
        '404':
          description: Proposal nomination not found

  /candidate-nominations:
    get:
      summary: Retrieve all candidate nominations
      responses:
        '200':
          description: A list of candidate nominations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CandidateNomination'
    post:
      summary: Submit a new candidate nomination
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidateNomination'
      responses:
        '201':
          description: Candidate nomination created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateNomination'
        '400':
          description: Invalid input

  /candidate-nominations/{id}:
    put:
      summary: Modify a candidate nomination
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidateNomination'
      responses:
        '200':
          description: Candidate nomination updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateNomination'
        '400':
          description: Invalid input
        '404':
          description: Candidate nomination not found
    delete:
      summary: Remove a candidate nomination
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Candidate nomination deleted successfully
        '404':
          description: Candidate nomination not found

components:
  schemas:
    Proposal:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        subtitle:
          type: string
        body:
          type: string
        type:
          type: integer
        approved:
          type: boolean
        reviewed:
          type: boolean
        status:
          type: integer
        submitdate:
          type: string
          format: date-time
        openvote:
          type: string
          format: date-time
        snapshot:
          type: string
          format: date-time
        closevote:
          type: string
          format: date-time
        wallet:
          type: integer
        submitted:
          type: string
          format: date-time
        votesActive:
          type: boolean
        passed:
          type: boolean

    ProposalNomination:
      type: object
      properties:
        id:
          type: integer
        proposalId:
          type: integer
        hash:
          type: string
        toAddress:
          type: string
        amountSent:
          type: number
        validVote:
          type: boolean
        nominatedAt:
          type: string
          format: date-time

    CandidateNomination:
      type: object
      properties:
        id:
          type: integer
        candidateId:
          type: integer
        electionId:
          type: integer
        nominatedAt:
          type: string
          format: date-time

    Election:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time

    Position:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        filled:
          type: boolean
        elect:
          type: boolean

    ProposalType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        simple:
          type: boolean

    Status:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        active:
          type: boolean
